package com.example.li.tveffect;

import android.annotation.TargetApi;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.os.Build;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.ImageView;

import java.util.Random;

public class MainActivity extends AppCompatActivity {

    ImageView mImageView;
    Bitmap[] mBitmaps;
    Drawable[] mDrawables;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        mImageView = findViewById(R.id.image1);

        initBitmaps();

        new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    final Drawable drawable = createDrawable();
                    runOnUiThread(new Runnable() {
                        @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
                        @Override
                        public void run() {
                            mImageView.setBackground(drawable);
                        }
                    });
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        }).start();
    }

    private void initBitmaps() {
        mBitmaps = new Bitmap[]{
                BitmapFactory.decodeResource(getResources(), R.drawable.a6),
                BitmapFactory.decodeResource(getResources(), R.drawable.a7),
                BitmapFactory.decodeResource(getResources(), R.drawable.a8),
                BitmapFactory.decodeResource(getResources(), R.drawable.a9),
                BitmapFactory.decodeResource(getResources(), R.drawable.a10),
                BitmapFactory.decodeResource(getResources(), R.drawable.a11),
        };
    }

    private Drawable createDrawable() {
        Bitmap resultBitmap = Bitmap.createBitmap(mBitmaps[0].getWidth() * 3, mBitmaps[0].getHeight() * 3, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(resultBitmap);
        Random random = new Random();
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                canvas.drawBitmap(mBitmaps[random.nextInt(6)], j * mBitmaps[0].getWidth(), i * mBitmaps[0].getHeight(), null);
            }
        }
        return new BitmapDrawable(resultBitmap);
    }
}
